#!/bin/bash
# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions
alias workarea='cd ~/_/cms/' #symlink to /nfs/dust/cms/user/afiqaize/cms/
alias nemacs='emacs -nw'
alias voauth='voms-proxy-init -voms cms'
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias ll='ls -ltrh'
alias la='ls -a'
alias l1='ls -1'
alias ssh='ssh -X'
alias dwgcms12='ssh afiqaize@desy-cms012.desy.de'
alias psa='date; ps -fu $USER'

#alias root5env='source /afs/cern.ch/sw/lcg/contrib/gcc/4.8.1/x86_64-slc6-gcc48-opt/setup.sh && source /cvmfs/cms.cern.ch/slc6_amd64_gcc481/lcg/root/5.34.22/bin/thisroot.sh'
alias root5env='module load root/5.34'
alias root6env='module load root6/6.02'
alias mg5env='. mg5amc240b_env.sh'
alias das='python /afs/desy.de/user/a/afiqaize/das_client.py'

alias crab2env='source /afs/cern.ch/cms/ccs/wm/scripts/Crab/crab.sh'
alias crab3env='source /cvmfs/cms.cern.ch/crab3/crab.sh'
alias crabstats='for a in $(ls -1 crab); do crab status crab/${a}; done'
alias craboutput='for a in $(ls -1 crab); do crab getoutput crab/${a}; done'
alias crablog='for a in $(ls -1 crab); do crab getlog crab/${a}; done'

# Simple utility qstat-based functions
qjob () {
    if [ -z "$2" ]; then
        jobStr="afiqaize"
    else
        jobStr=$2
    fi

    if [ "$1" = "del" ]; then
        qstat -u afiqaize | grep ${jobStr} | awk '{print $1}' | xargs qdel -f
    elif [ "$1" = "stat" ]; then
        qstat -u afiqaize
    elif [ "$1" = "count" ]; then
        qstat -u afiqaize | grep ${jobStr} | wc -l
    else
        echo 'Mode not understood. Try: qjob (del/stat/count) jobStr'
    fi
}

makeSelList () {
    if [ -z "$1" ]; then
        echo 'Base directory not set, unable to find ntuples for selectionList text files!!'
        echo 'Try: /nfs/dust/cms/group/topcmsdesy/ntuple13tev/2017_04_19_TAG_V035 (dirToExclude1 dirToExclude2 ...)'
    else
        baseDir=$1
        rm selectionList*.txt

        l1 ${baseDir}/*.root >& selectionList_all.txt
        l1 ${baseDir}/**/*.root >> selectionList_all.txt

        for ((i = 2; i <= $#; i++)); do
            eval arg=\$$i
            echo 'Excluding files in directory '${arg}' from selectionList_all.txt'
            toExc=${baseDir}/${arg}
            sed -i "s?${toExc}?#${toExc}?g" selectionList_all.txt
        done

        grep ttbarsignalplustau.root selectionList_all.txt >& selectionList_smtt.txt
        cp selectionList_smtt.txt selectionList_phitt.txt
        grep Htottbar selectionList_all.txt | grep signalplustau >> selectionList_phitt.txt
        echo 'Done making selectionList text files from directory '${baseDir}
    fi
}

# Go directly to work area (sonas)
if [ `hostname | grep "nafhh"` ]; then
    workarea
fi
#source /afs/cern.ch/sw/lcg/contrib/gcc/4.6/x86_64-slc6-gcc46-opt/setup.sh
#. sge-root/cell/common/settings.sh
module use -a /afs/desy.de/group/cms/modulefiles
module load cmssw
module load git/1.9

# Beautiful printout of the current git branch when in repository:
function parse_git_branch_and_add_brackets {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\[\1\]/'
}
PS1="${debian_chroot:+($debian_chroot)}\u@\h:\w\[\033[0;32m\]\$(parse_git_branch_and_add_brackets)\[\033[0m\]\$ "

# SSH Color
# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
        && type -P dircolors >/dev/null \
        && match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
        # Enable colors for ls, etc.  Prefer ~/.dir_colors #64489
        if type -P dircolors >/dev/null ; then
                if [[ -f ~/.dir_colors ]] ; then
                        eval $(dircolors -b ~/.dir_colors)
                elif [[ -f /etc/DIR_COLORS ]] ; then
                        eval $(dircolors -b /etc/DIR_COLORS)
                fi
        fi

        if [[ ${EUID} == 0 ]] ; then
                PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\h\[\033[01;34m\] \W \$\[\033[00m\] '
        else
                PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[01;34m\] \w \$\[\033[00m\] '
        fi

        alias ls='ls --color=auto'
        alias grep='grep --colour=auto'
else
        if [[ ${EUID} == 0 ]] ; then
                # show root@ when we don't have colors
                PS1='\u@\h \W \$ '
        else
                PS1='\u@\h \w \$ '
        fi
fi

# Try to keep environment pollution down, EPA loves us.
unset use_color safe_term match_lhs

# Commented out, don't overwrite xterm -T "title" -n "icontitle" by default.
# If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
#    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
#    ;;
#*)
#    ;;
#esac

# enable bash completion in interactive shells
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# if the command-not-found package is installed, use it
if [ -x /usr/lib/command-not-found ]; then
    function command_not_found_handle {
	        # check because c-n-f could've been removed in the meantime
                if [ -x /usr/lib/command-not-found ]; then
		       /usr/bin/python /usr/lib/command-not-found -- $1
                   return $?
		   else
		       return 127
		       fi
		}
fi
